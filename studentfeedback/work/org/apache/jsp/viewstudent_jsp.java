/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.68
 * Generated at: 2021-09-16 12:55:58 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import sun.misc.BASE64Encoder;

public final class viewstudent_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<link href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\r\n");
      out.write("<script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js\"></script>\r\n");
      out.write("<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("\r\n");
      out.write("  .styled-table {\r\n");
      out.write("    border-collapse: collapse;\r\n");
      out.write("    margin: 25px 0;\r\n");
      out.write("    font-size: 0.9em;\r\n");
      out.write("    font-family: sans-serif;\r\n");
      out.write("    min-width: 400px;\r\n");
      out.write("    box-shadow: 0 0 20px rgba(0, 0, 0, 0.15);\r\n");
      out.write("}\r\n");
      out.write(".styled-table thead tr {\r\n");
      out.write("    background-color: #009879;\r\n");
      out.write("    color: #ffffff;\r\n");
      out.write("    text-align: left;\r\n");
      out.write("}\r\n");
      out.write(".styled-table th,\r\n");
      out.write(".styled-table td {\r\n");
      out.write("    padding: 12px 15px;\r\n");
      out.write("}\r\n");
      out.write(".styled-table tbody tr {\r\n");
      out.write("    border-bottom: 1px solid #dddddd;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".styled-table tbody tr:nth-of-type(even) {\r\n");
      out.write("    background-color: #f3f3f3;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".styled-table tbody tr:last-of-type {\r\n");
      out.write("    border-bottom: 2px solid #009879;\r\n");
      out.write("}\r\n");
      out.write(".styled-table tbody tr.active-row {\r\n");
      out.write("    font-weight: bold;\r\n");
      out.write("    color: #009879;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("<body >\r\n");
      out.write("<center><br><br>\r\n");
      out.write("\r\n");
      out.write("<marquee><h1 style=\"color:skyblue\" class=\"p1\">STUDENTS DATA</h1></marquee><br>\r\n");
      out.write("<table class=\"styled-table\">\r\n");
      out.write("<thead>\r\n");
      out.write("<tr>\r\n");
      out.write("\t<th >Name</th>\r\n");
      out.write("\t<th >Contact</th>\r\n");
      out.write("\t<th>DOB</th>\r\n");
      out.write("\t<th>Email</th>\r\n");
      out.write("\t<th >Gender</th>\r\n");
      out.write("\t<th >Branch</th>\r\n");
      out.write("\t<th >semister</th>\r\n");
      out.write("\t<th >USN</th>\r\n");
      out.write("\t<th >Address</th>\r\n");
      out.write("\t<th >Username</th>\r\n");
      out.write("\t<th >Password</th>\r\n");
      out.write("\t<th >confirmpassword</th>\r\n");
      out.write("\t\r\n");
      out.write("</tr>\r\n");
      out.write("\t</thead>\r\n");
      out.write("\r\n");


try{
	Class.forName("com.mysql.jdbc.Driver");
	Connection con = DriverManager.getConnection("jdbc:mysql://localhost/feedback","root","root");
	Statement st = con.createStatement();
	
	
	ResultSet res = st.executeQuery("select *from student");
	while(res.next()){
		byte[] imageBytes = res.getBytes(8);
		BASE64Encoder enc = new BASE64Encoder();
		String img = enc.encode(imageBytes);
		System.out.println(img);

      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<td >");
      out.print(res.getString(1) );
      out.write("</td>\r\n");
      out.write("\t\t<td >");
      out.print(res.getString(2) );
      out.write("</td>\r\n");
      out.write("\t\t<td>");
      out.print(res.getString(3) );
      out.write("</td>\r\n");
      out.write("\t\t<td >");
      out.print(res.getString(4) );
      out.write("</td>\r\n");
      out.write("\t\t<td >");
      out.print(res.getString(5) );
      out.write("</td>\r\n");
      out.write("\t\t<td >");
      out.print(res.getString(6) );
      out.write("</td>\r\n");
      out.write("\t\t<td >");
      out.print(res.getString(7) );
      out.write("</td>\r\n");
      out.write("\t\t<td >");
      out.print(res.getString(8) );
      out.write("</td>\r\n");
      out.write("\t\t<td >");
      out.print(res.getString(9) );
      out.write("</td>\r\n");
      out.write("\t\t<td >");
      out.print(res.getString(10) );
      out.write("</td>\r\n");
      out.write("\t\t<td >");
      out.print(res.getString(11));
      out.write("</td>\r\n");
      out.write("\t\t<td >");
      out.print(res.getString(12) );
      out.write("</td>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\t</tr>\r\n");
	
	}


}
catch(Exception e){
System.out.println(e);

	
		}


      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</center>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
